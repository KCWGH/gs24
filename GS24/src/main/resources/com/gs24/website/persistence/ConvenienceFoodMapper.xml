<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gs24.website.persistence.ConvenienceFoodMapper">
	<resultMap type="com.gs24.website.domain.ConvenienceFoodVO" id="ConvenienceFoodResultMap">
		<id property="convenienceFoodId" column="CONVENIENCE_FOOD_ID"/>
		<result property="convenienceId" column="CONVENIENCE_ID"/>
		<result property="foodId" column="FOOD_ID"/>
		<result property="foodType" column="FOOD_TYPE"/>
		<result property="foodName" column="FOOD_NAME"/>
		<result property="foodPrice" column="FOOD_PRICE"/>
		<result property="foodAmount" column="FOOD_AMOUNT"/>
		<result property="imgPath" column="IMG_THUMBNAIL_PATH"/>
		<result property="foodAvgRating" column="FOOD_AVG_RATING"/>
		<result property="foodReviewCnt" column="FOOD_REVIEW_CNT"/>
		<result property="showStatus" column="SHOW_STATUS"/>
	</resultMap>
	
	<resultMap type="com.gs24.website.domain.ConvenienceDetailFoodVO" id="ConvenienceDetailFoodResultMap">
		<id property="convenienceFoodId" column="CONVENIENCE_FOOD_ID"/>
		<result property="convenienceId" column="CONVENIENCE_ID"/>
		<result property="foodId" column="FOOD_ID"/>
		<result property="foodType" column="FOOD_TYPE"/>
		<result property="foodName" column="FOOD_NAME"/>
		<result property="foodPrice" column="FOOD_PRICE"/>
		<result property="foodProtein" column="FOOD_PROTEIN"/>
		<result property="foodFat" column="FOOD_FAT"/>
		<result property="foodCarb" column="FOOD_CARB"/>
		<result property="foodAmount" column="FOOD_AMOUNT"/>
	</resultMap>
	
	<insert id="insertConvenienceFood">
		INSERT INTO CONVENIENCE_FOOD (CONVENIENCE_FOOD_ID,CONVENIENCE_ID,FOOD_ID,FOOD_AMOUNT)
		VALUES(CONVENIENCE_FOOD_SEQ.NEXTVAL ,#{convenienceId},#{foodId},#{foodAmount})
	</insert>
	
	<select id="selectAllConvenienceFood" resultMap="ConvenienceFoodResultMap">
		SELECT DISTINCT	CONVENIENCE_FOOD.CONVENIENCE_FOOD_ID,
				CONVENIENCE_FOOD.CONVENIENCE_ID,
				FOOD.FOOD_ID,
				FOOD.FOOD_TYPE,
				FOOD.FOOD_NAME,
				FOOD.FOOD_PRICE,
				FOOD.FOOD_AVG_RATING,
				FOOD.FOOD_REVIEW_CNT,
				CONVENIENCE_FOOD.FOOD_AMOUNT,
				IMG_THUMBNAIL.IMG_THUMBNAIL_PATH
				FROM CONVENIENCE_FOOD
		INNER JOIN FOOD ON FOOD.FOOD_ID = CONVENIENCE_FOOD.FOOD_ID
		INNER JOIN IMG_THUMBNAIL ON IMG_THUMBNAIL.FOOD_ID = FOOD.FOOD_ID
	</select>
	
	<select id="selectPagedConvenienceFoodByConvenienceId" resultMap="ConvenienceFoodResultMap">
        SELECT * FROM (
        SELECT 
        		ROW_NUMBER() OVER (
        		<choose>
					<when test="pagination.sortType == 'rowPrice'.toString()">ORDER BY FOOD.FOOD_PRICE ASC</when>
					<when test="pagination.sortType == 'topPrice'.toString()">ORDER BY FOOD.FOOD_PRICE DESC</when>
					<otherwise>ORDER BY FOOD.FOOD_ID DESC</otherwise>
				</choose>
        		) AS RN,
		CONVENIENCE_FOOD.CONVENIENCE_FOOD_ID,
		CONVENIENCE_FOOD.CONVENIENCE_ID,
		FOOD.FOOD_ID,
		FOOD.FOOD_TYPE,
		FOOD.FOOD_NAME,
		FOOD.FOOD_PRICE,
		FOOD.FOOD_AVG_RATING,
		FOOD.FOOD_REVIEW_CNT,
		CONVENIENCE_FOOD.FOOD_AMOUNT,
		IMG_THUMBNAIL.IMG_THUMBNAIL_PATH,
		CONVENIENCE_FOOD.SHOW_STATUS
		FROM CONVENIENCE_FOOD
		INNER JOIN FOOD ON FOOD.FOOD_ID = CONVENIENCE_FOOD.FOOD_ID
		INNER JOIN IMG_THUMBNAIL ON IMG_THUMBNAIL.FOOD_ID = CONVENIENCE_FOOD.FOOD_ID
		WHERE CONVENIENCE_ID = #{pagination.convenienceId}
				<if test="isOwner == 0">AND SHOW_STATUS = 1</if>
				<if test="pagination.keyword != ''">AND FOOD_NAME LIKE '%'||#{pagination.keyword}||'%'</if>
				<if test="pagination.bottomPrice != ''">AND (FOOD_PRICE BETWEEN #{pagination.bottomPrice} AND
					<choose>
						<when test="pagination.topPrice == '' or pagination.topPrice == null"> (SELECT MAX(FOOD_PRICE) FROM CONVENIENCE_FOOD))</when>
						<otherwise> #{pagination.topPrice})</otherwise>
					</choose>
				</if>
				<if test="pagination.bottomPrice == ''">AND (FOOD_PRICE BETWEEN 0 AND
					<choose>
						<when test="pagination.topPrice == '' or pagination.topPrice == null"> (SELECT MAX(FOOD_PRICE) FROM CONVENIENCE_FOOD))</when>
						<otherwise> #{pagination.topPrice})</otherwise>
					</choose>
				</if>
		)
		WHERE RN BETWEEN #{pagination.start} AND #{pagination.end}
	</select>
	
	<select id="selectConvenienceFoodByFoodIdAndConvenienceId" resultMap="ConvenienceFoodResultMap">
		SELECT DISTINCT
		CONVENIENCE_FOOD.CONVENIENCE_FOOD_ID,
		CONVENIENCE_FOOD.CONVENIENCE_ID,
		FOOD.FOOD_ID,
		FOOD.FOOD_TYPE,
		FOOD.FOOD_NAME,
		FOOD.FOOD_PRICE,
		FOOD.FOOD_AVG_RATING,
		FOOD.FOOD_REVIEW_CNT,
		CONVENIENCE_FOOD.FOOD_AMOUNT,
		IMG_THUMBNAIL.IMG_THUMBNAIL_PATH,
		CONVENIENCE_FOOD.SHOW_STATUS
		FROM CONVENIENCE_FOOD
		INNER JOIN FOOD ON FOOD.FOOD_ID = CONVENIENCE_FOOD.FOOD_ID
		INNER JOIN IMG_THUMBNAIL ON IMG_THUMBNAIL.FOOD_ID = CONVENIENCE_FOOD.FOOD_ID
		WHERE CONVENIENCE_FOOD.FOOD_ID = #{foodId} AND CONVENIENCE_FOOD.CONVENIENCE_ID = #{convenienceId}
	</select>
	
	<select id="countTotalFoodsByConvenienceId" resultType="Integer">
		SELECT COUNT(*)
		FROM CONVENIENCE_FOOD
		INNER JOIN FOOD ON FOOD.FOOD_ID = CONVENIENCE_FOOD.FOOD_ID
		INNER JOIN IMG_THUMBNAIL ON IMG_THUMBNAIL.FOOD_ID = CONVENIENCE_FOOD.FOOD_ID
		WHERE CONVENIENCE_FOOD.CONVENIENCE_ID = #{pagination.convenienceId}
		<if test="isOwner == 0">AND SHOW_STATUS = 1</if>
		<if test="pagination.keyword != ''">AND FOOD_NAME LIKE '%'||#{pagination.keyword}||'%'</if>
				<if test="pagination.bottomPrice != ''">AND (FOOD_PRICE BETWEEN #{pagination.bottomPrice} AND
					<choose>
						<when test="pagination.topPrice == ''"> (SELECT MAX(FOOD_PRICE) FROM CONVENIENCE_FOOD))</when>
						<otherwise> #{pagination.topPrice})</otherwise>
					</choose>
				</if>
				<if test="pagination.bottomPrice == ''">AND (FOOD_PRICE BETWEEN 0 AND
					<choose>
						<when test="pagination.topPrice == ''"> (SELECT MAX(FOOD_PRICE) FROM CONVENIENCE_FOOD))</when>
						<otherwise> #{pagination.topPrice})</otherwise>
					</choose>
				</if>
	</select>
	
	<select id="selectDetailConvenienceFoodByFoodId" resultMap="ConvenienceDetailFoodResultMap">
		SELECT DISTINCT
		CONVENIENCE_FOOD.CONVENIENCE_FOOD_ID,
		CONVENIENCE_FOOD.CONVENIENCE_ID,
		FOOD.FOOD_ID,
		FOOD.FOOD_TYPE,
		FOOD.FOOD_NAME,
		FOOD.FOOD_PRICE,
		FOOD.FOOD_PROTEIN,
		FOOD.FOOD_FAT,
		FOOD.FOOD_CARB,
		CONVENIENCE_FOOD.FOOD_AMOUNT
		FROM CONVENIENCE_FOOD
		INNER JOIN FOOD ON FOOD.FOOD_ID = CONVENIENCE_FOOD.FOOD_ID
		INNER JOIN IMG_THUMBNAIL ON IMG_THUMBNAIL.FOOD_ID = FOOD.FOOD_ID
		WHERE CONVENIENCE_FOOD.FOOD_ID = #{foodId} AND CONVENIENCE_FOOD.CONVENIENCE_ID = #{convenienceId}
	</select>
	
	<select id="checkHasFood" resultType="Integer">
		SELECT CASE WHEN EXISTS (SELECT 1 FROM CONVENIENCE_FOOD WHERE FOOD_ID = #{foodId} AND CONVENIENCE_ID = #{convenienceId}) THEN 1 ELSE 0 END AS result
		FROM DUAL
	</select>
	
	<select id="selectAddress" resultType="String">
		SELECT o.ADDRESS
			FROM OWNER o
			JOIN CONVENIENCE c ON o.OWNER_ID = c.OWNER_ID
		WHERE c.CONVENIENCE_ID = #{convenienceId}
	</select>
	
	<update id="updateFoodAmountByInsert">
		UPDATE CONVENIENCE_FOOD SET FOOD_AMOUNT = FOOD_AMOUNT + #{foodAmount} WHERE FOOD_ID = #{foodId} AND CONVENIENCE_ID = #{convenienceId}
	</update>
	
	<update id="updateFoodAmountByPreorder">
		UPDATE CONVENIENCE_FOOD SET FOOD_AMOUNT = FOOD_AMOUNT - #{preorderAmount} WHERE FOOD_ID = #{foodId} AND CONVENIENCE_ID = #{convenienceId}
	</update>
	
	<select id="selectFoodType" resultType="String">
      	SELECT DISTINCT FOOD_TYPE
		FROM FOOD
		WHERE FOOD_ID IN (SELECT FOOD_ID FROM CONVENIENCE_FOOD)
   	</select>
	
	<update id="updateShowStatus">
		UPDATE CONVENIENCE_FOOD SET SHOW_STATUS = CASE  WHEN SHOW_STATUS = 1 THEN 0 WHEN SHOW_STATUS = 0 THEN 1 END
		WHERE FOOD_ID = #{foodId} AND CONVENIENCE_ID = #{convenienceId}
	</update>
	
	<select id="selectFoodTypeListByConvenienceId" resultType="String">
		 SELECT DISTINCT FOOD_TYPE 
		 FROM FOOD fl JOIN CONVENIENCE_FOOD cf ON fl.FOOD_ID = cf.FOOD_ID 
		 WHERE cf.CONVENIENCE_ID = #{convenienceId} 
	</select>
</mapper>